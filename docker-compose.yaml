version: '3.1'

services:
  app:
    restart: always
    volumes:
      - /home/simizzz/.postgresql/root.crt:/app/src/root.crt
      - /home/simizzz/infra/private.pem:/app/src/certs/private.pem
      - /home/simizzz/infra/public.pem:/app/src/certs/public.pem
    env_file:
      - /home/simizzz/infra/.env
    build: .
    command: bash -c "cd src && poetry run uvicorn app:app --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"
    container_name: app

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - /home/simizzz/restaurants_backend/prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    container_name: exporter
    hostname: exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - /home/simizzz/restaurants_backend/grafana_data:/var/lib/grafana
    user: root

  redis:
      image: redis
      container_name: redis
      ports:
        - "6379:6379"
      restart: always
